---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/daemonset.yaml

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: api
  labels:     
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.0.2
    release: nri-bundle
    mode: privileged
  name: nri-bundle-newrelic-infrastructure
  annotations:
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: newrelic-infrastructure
      release: nri-bundle
  template:
    metadata:
      labels:
        app: newrelic-infrastructure
        release: nri-bundle
        mode: privileged
    spec:
      serviceAccountName: nri-bundle-newrelic-infrastructure
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: newrelic-infrastructure
          image: "newrelic/infrastructure-k8s:2.0.1"
          imagePullPolicy: "IfNotPresent"
          securityContext:
            privileged: true
          env:
            - name: NRIA_LICENSE_KEY
              value: ${NR_INSTALL_KEY}
            - name: "CLUSTER_NAME"
              value: ${KUBERNETES_SERVER_NAME}
            - name: "NRK8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_DISPLAY_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_CUSTOM_ATTRIBUTES"
              value: '{"clusterName":"$(CLUSTER_NAME)"}'
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,CLUSTER_NAME,CADVISOR_PORT,NRK8S_NODE_NAME,KUBE_STATE_METRICS_URL,KUBE_STATE_METRICS_POD_LABEL,TIMEOUT,ETCD_TLS_SECRET_NAME,ETCD_TLS_SECRET_NAMESPACE,API_SERVER_SECURE_PORT,KUBE_STATE_METRICS_SCHEME,KUBE_STATE_METRICS_PORT,SCHEDULER_ENDPOINT_URL,ETCD_ENDPOINT_URL,CONTROLLER_MANAGER_ENDPOINT_URL,API_SERVER_ENDPOINT_URL,DISABLE_KUBE_STATE_METRICS,DISCOVERY_CACHE_TTL"
          volumeMounts:
            - name: dev
              mountPath: /dev
            - name: host-docker-socket
              mountPath: /var/run/docker.sock
            - name: log
              mountPath: /var/log
            - name: host-volume
              mountPath: /host
              readOnly: true
          resources:
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
            
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: log
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        

---
# Source: nri-bundle/charts/newrelic-logging/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: api
  labels:
    app: newrelic-logging
    chart: newrelic-logging-1.4.5
    release: "nri-bundle"
  annotations:
  name: nri-bundle-newrelic-logging
---
# Source: nri-bundle/charts/newrelic-logging/templates/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  namespace: api
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.4.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging-config
type: Opaque
data:
  license: YThkZjY0ZTdhZWI0OTZiNzVjODJmNjk0OTcxMzBlYjQ0Mzk3YTc1NA==

---
# Source: nri-bundle/charts/newrelic-logging/templates/daemonset.yaml

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: api
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.4.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging
  annotations:
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: newrelic-logging
      release: nri-bundle
  template:
    metadata:
      labels:
        app: newrelic-logging
        release: nri-bundle
        app.kubernetes.io/name: newrelic-logging
    spec:
      serviceAccountName: nri-bundle-newrelic-logging
      hostNetwork: true # This option is a requirement for the Infrastructure Agent to report the proper hostname in New Relic.
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      containers:
        - name: newrelic-logging
          image: "newrelic/newrelic-fluentbit-output:1.4.6"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: ENDPOINT
              value: "https://log-api.newrelic.com/log/v1"
            - name: SOURCE
              value: "kubernetes"
            - name: LICENSE_KEY
              value: ${NR_INSTALL_KEY}
            - name: CLUSTER_NAME
              value: ${KUBERNETES_SERVER_NAME}
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_PARSER
              value: "docker"
            - name: PATH
              value: "/var/log/containers/*.log"
            - name: K8S_LOGGING_EXCLUDE
              value: "Off"
          command:
            - /fluent-bit/bin/fluent-bit
            - -c
            - /fluent-bit/etc/fluent-bit.conf
            - -e
            - /fluent-bit/bin/out_newrelic.so
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
            - name: var
              mountPath: /var
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 64Mi
            
      volumes:
        - name: fluent-bit-config
          configMap:
            name: nri-bundle-newrelic-logging-fluent-bit-config
        - name: var
          hostPath:
            path: /var
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        

---
# Source: nri-bundle/charts/nri-metadata-injection/templates/clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-bundle-nri-metadata-injection
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["get", "create", "patch"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["create", "get", "delete"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/approval"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - apiGroups: ["certificates.k8s.io"]
    resources:
      - "signers"
    resourceNames:
      - "kubernetes.io/legacy-unknown"
    verbs: ["approve"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.4.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-newrelic-logging
subjects:
- kind: ServiceAccount
  name: nri-bundle-newrelic-logging
  namespace: api
---
# Source: nri-bundle/charts/newrelic-logging/templates/clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.4.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - pods
    verbs: ["get", "list", "watch"]
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/clusterrolebinding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:     
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.0.2
    release: nri-bundle
    mode: privileged
  name: nri-bundle-newrelic-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-newrelic-infrastructure
subjects:
- kind: ServiceAccount
  name: nri-bundle-newrelic-infrastructure
  namespace: api
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/mutationwebhookconfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: nri-bundle-nri-metadata-injection
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
webhooks:
- name: metadata-injection.newrelic.com
  clientConfig:
    service:
      name: nri-bundle-nri-metadata-injection
      namespace: api
      path: "/mutate"
    caBundle: ""
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  failurePolicy: Ignore
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/job.yaml

apiVersion: batch/v1
kind: Job
metadata:
  name: nri-bundle-nri-metadata-injection-job
  namespace: api
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nri-metadata-injection
        helm.sh/chart: nri-metadata-injection-1.3.3
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/version: "1.3.2"
    spec:
      serviceAccountName: nri-bundle-nri-metadata-injection
      containers:
      - name: nri-metadata-injection-job
        # This is a minimal kubectl image based on Alpine Linux that sings certificates using the k8s extension api server
        image: "newrelic/k8s-webhook-cert-manager:1.3.2"
        imagePullPolicy: "IfNotPresent"
        command: ["./generate_certificate.sh"]
        args:
          - "--service"
          - nri-bundle-nri-metadata-injection
          - "--webhook"
          - nri-bundle-nri-metadata-injection
          - "--secret"
          - nri-bundle-nri-metadata-injection
          - "--namespace"
          - api
      restartPolicy: Never
  backoffLimit: 1
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: api
  labels:
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.0.2
    release: "nri-bundle"
  annotations:
    null
    
  name: nri-bundle-newrelic-infrastructure
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:     
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.0.2
    release: nri-bundle
    mode: privileged
  name: nri-bundle-newrelic-infrastructure
rules:
  - apiGroups: [""]
    resources:
      - "nodes"
      - "nodes/metrics"
      - "nodes/stats"
      - "nodes/proxy"
      - "pods"
      - "services"
      - "secrets"
    verbs: ["get", "list"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: api
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  namespace: api
  labels:     
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.0.2
    release: nri-bundle
    mode: privileged
  name: nri-bundle-newrelic-infrastructure-config
type: Opaque
data:
  license: YThkZjY0ZTdhZWI0OTZiNzVjODJmNjk0OTcxMzBlYjQ0Mzk3YTc1NA==

---
# Source: nri-bundle/charts/nri-metadata-injection/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: api
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-metadata-injection
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nri-metadata-injection
        helm.sh/chart: nri-metadata-injection-1.3.3
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/version: "1.3.2"
    spec:
      serviceAccountName: nri-bundle-nri-metadata-injection
      containers:
      - name: nri-metadata-injection
        image: "newrelic/k8s-metadata-injection:1.3.2"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: clusterName
          value: aks-crds-int
        volumeMounts:
        - name: tls-key-cert-pair
          mountPath: /etc/tls-key-cert-pair
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          limits:
            memory: 80M
          requests:
            cpu: 100m
            memory: 30M
          
      volumes:
      - name: tls-key-cert-pair
        secret:
          secretName: nri-bundle-nri-metadata-injection

---
# Source: nri-bundle/charts/newrelic-logging/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: api
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.4.5
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging-fluent-bit-config
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     ${LOG_LEVEL}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE output-newrelic.conf
    @INCLUDE filter-kubernetes.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              ${PATH}
        Parser            ${LOG_PARSER}
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     7MB
        Skip_Long_Lines   On
        Refresh_Interval  10

  filter-kubernetes.conf: |
    [FILTER]
        Name           record_modifier
        Match          *
        Record         cluster_name ${CLUSTER_NAME}

    [FILTER]
        Name           kubernetes
        Match          kube.*
        Kube_URL       https://kubernetes.default.svc:443
        K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}

  output-newrelic.conf: |
    [OUTPUT]
        Name  newrelic
        Match *
        licenseKey ${LICENSE_KEY}
        endpoint ${ENDPOINT}

  parsers.conf: |
    # Relevant parsers retrieved from: https://github.com/fluent/fluent-bit/blob/master/conf/parsers.conf
    [PARSER]
        Name         docker
        Format       json
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L
        Time_Keep    On

    [PARSER]
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

---
# Source: nri-bundle/charts/nri-metadata-injection/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: api
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: nri-metadata-injection

---
# Source: nri-bundle/charts/nri-metadata-injection/templates/clusterrolebinding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nri-bundle-nri-metadata-injection
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.3.3
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-bundle-nri-metadata-injection
subjects:
  - kind: ServiceAccount
    name: nri-bundle-nri-metadata-injection
    namespace: api

